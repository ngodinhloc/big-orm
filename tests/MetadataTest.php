<?php
declare(strict_types=1);

namespace Tests;

use Bigcommerce\ORM\Annotations\BigObject;
use Bigcommerce\ORM\Metadata;

class MetadataTest extends BaseTestCase
{
    /** @var \Bigcommerce\ORM\Metadata */
    protected $metadata;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->metadata = new Metadata();
    }

    /**
     * @covers \Bigcommerce\ORM\Metadata::setBigObject
     * @covers \Bigcommerce\ORM\Metadata::setRelationFields
     * @covers \Bigcommerce\ORM\Metadata::setUploadFiles
     * @covers \Bigcommerce\ORM\Metadata::setAutoIncludes
     * @covers \Bigcommerce\ORM\Metadata::setRequiredValidations
     * @covers \Bigcommerce\ORM\Metadata::setCustomisedFields
     * @covers \Bigcommerce\ORM\Metadata::setReadonlyFields
     * @covers \Bigcommerce\ORM\Metadata::setAutoLoads
     * @covers \Bigcommerce\ORM\Metadata::setRequiredFields
     * @covers \Bigcommerce\ORM\Metadata::getBigObject
     * @covers \Bigcommerce\ORM\Metadata::getRelationFields
     * @covers \Bigcommerce\ORM\Metadata::getUploadFiles
     * @covers \Bigcommerce\ORM\Metadata::getAutoIncludes
     * @covers \Bigcommerce\ORM\Metadata::getRequiredValidations
     * @covers \Bigcommerce\ORM\Metadata::getCustomisedFields
     * @covers \Bigcommerce\ORM\Metadata::getReadonlyFields
     * @covers \Bigcommerce\ORM\Metadata::getAutoLoads
     * @covers \Bigcommerce\ORM\Metadata::getRequiredFields
     */
    public function testSettersAndGetters()
    {
        $bigObject = new BigObject([]);
        $this->metadata
            ->setBigObject($bigObject)
            ->setRelationFields([])
            ->setUploadFiles([])
            ->setAutoIncludes([])
            ->setRequiredValidations([])
            ->setCustomisedFields([])
            ->setReadonlyFields([])
            ->setAutoLoads([])
            ->setRequiredFields([]);
        $this->assertEquals($bigObject, $this->metadata->getBigObject());
        $this->assertEquals([], $this->metadata->getRelationFields());
        $this->assertEquals([], $this->metadata->getUploadFiles());
        $this->assertEquals([], $this->metadata->getAutoIncludes());
        $this->assertEquals([], $this->metadata->getRequiredValidations());
        $this->assertEquals([], $this->metadata->getCustomisedFields());
        $this->assertEquals([], $this->metadata->getReadonlyFields());
        $this->assertEquals([], $this->metadata->getAutoLoads());
        $this->assertEquals([], $this->metadata->getRequiredFields());
    }
}